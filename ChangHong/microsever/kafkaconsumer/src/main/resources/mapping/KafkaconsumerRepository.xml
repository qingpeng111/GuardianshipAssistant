<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.changhong.repository.KafkaconsumerRepository">


<!--******************************************************************-->
    <!--插入anomalous-->
    <insert id="insertIntoAnomalous" parameterType="anomalous" >
        INSERT ignore INTO t_anomalous(time,type,source,target,port_s,port_t,details,is_abnormal)
        VALUES
        (#{time},#{type},#{source},#{target},#{port_s},#{port_t},#{details},#{is_abnormal});
    </insert>

    <!--插入statistics(展示没有用到)-->
    <!--<insert id="insertIntoStatistics" parameterType="statistics" >-->
        <!--INSERT ignore INTO t_statistics(time,type,count)-->
        <!--VALUES-->
        <!--(#{time},#{type},#{count});-->
    <!--</insert>-->

    <!--<select id="findCountBypeAndTime" resultType="statistics">-->
        <!--select *from t_statistics-->
        <!--where-->
        <!--time=#{param1}-->
        <!--and type=#{param2}-->
    <!--</select>-->

    <!--根据时间和类型查询-->
    <select id="findByTimeAndType" resultType="statistics">
        select *from t_statistics where  time=#{param1} and type=#{param2} order by time desc
    </select>

    <!--新插入一条数据-->
    <insert id="insertIntoStatistics">
        INSERT INTO t_statistics(time,type,total,abnomal_total,attack_total) VALUES(#{param1},#{param2},#{param3},#{param4},#{param5})
    </insert>

    <!--更新total和abnomal_total-->
    <update id="updateAbnomalTotalByTimeAndType">
        update t_statistics A set A.total = A.total+1 , A.abnomal_total=A.abnomal_total+1  where A.time=#{param1} and A.type=#{param2}
    </update>

    <!--更新total-->
    <update id="updateTotalByTimeAndType">
        update t_statistics A set A.total = A.total+1 where A.time=#{param1} and A.type=#{param2}
    </update>

    <!--<resultMap id="BaseResultMap" type="com.interview.mybatislearning.model.UserEntity">-->
        <!--<id column="id" property="id" jdbcType="BIGINT"/>-->
        <!--<result column="username" property="userName" jdbcType="VARCHAR"/>-->
        <!--<result column="password" property="passWord" jdbcType="VARCHAR"/>-->
        <!--<result column="nick_name" property="nickName" jdbcType="VARCHAR"/>-->
    <!--</resultMap>-->

    <!--<sql id="Base_Column_List">-->
        <!--id, username, password, nick_name-->
    <!--</sql>-->

    <!--<sql id="Base_Where_List">-->
        <!--<if test="userName != null  and userName != ''">-->
            <!--and userName = #{userName}-->
        <!--</if>-->
    <!--</sql>-->

    <!--<select id="getAll" resultMap="BaseResultMap">-->
        <!--SELECT-->
        <!--<include refid="Base_Column_List"/>-->
        <!--FROM t_user-->
    <!--</select>-->

    <!--<select id="getOne" parameterType="Long" resultMap="BaseResultMap">-->
        <!--SELECT-->
        <!--<include refid="Base_Column_List"/>-->
        <!--FROM t_user-->
        <!--WHERE id = #{id}-->
    <!--</select>-->

    <!--<insert id="insert" parameterType="com.interview.mybatislearning.model.UserEntity">-->
       <!--INSERT INTO-->
       		<!--t_user-->
       		<!--(username,password,nick_name)-->
       	<!--VALUES-->
       		<!--(#{userName}, #{passWord}, #{nickName})-->
    <!--</insert>-->

    <!--<update id="update" parameterType="com.interview.mybatislearning.model.UserEntity">-->
        <!--UPDATE-->
        <!--t_user-->
        <!--SET-->
        <!--<if test="userName != null">username = #{userName},</if>-->
        <!--<if test="passWord != null">password = #{passWord},</if>-->
        <!--nick_name = #{nickName}-->
        <!--WHERE-->
        <!--id = #{id}-->
    <!--</update>-->

    <!--<delete id="delete" parameterType="Long">-->
       <!--DELETE FROM-->
       		 <!--t_user-->
       <!--WHERE-->

       		 <!--id =#{id}-->
    <!--</delete>-->
</mapper>
